
services:

  nginx:
    image: nginx:latest
    container_name: site_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server/nginx_all_apps.conf:/etc/nginx/nginx.conf:ro
      - ./data/dokucozy:/var/www/dokucozy
      - ./data/dokuN657CZ:/var/www/dokuN657CZ
      - ./server/certbot/www/:/var/www/certbot/:ro
      - ./server/certbot/conf/live/m24tom.com/:/var/www/ssl/:ro
      #note that symlinks will not work so need to make sure that 
      #after ssl certificate upgrade the actual .pem files are copied into this directory
    depends_on:
        - php1
        - php2
        - flask
    networks:
        - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

  flask:
    build:
      context: .
      dockerfile: flask.dockerfile
    container_name: site_flask
    #env_file:
    #  - ./.env_openai_key
    ports:
      - "8001:8001"
    volumes:
      - ./fwww:/app/fwww
      - ./data/jobs:/app/jobs
      - ./data/www:/app/www
    depends_on:
      - chroma-rag
      - ollama-rag
    networks:
      - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

  php1:
      image: php:7-fpm
      container_name: php1
      volumes:
        - ./data/dokucozy:/var/www/dokucozy
      networks:
        - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

  php2:
      image: php:7-fpm
      container_name: php2
      volumes:
        - ./data/dokuN657CZ:/var/www/dokuN657CZ
      networks:
        - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

  chroma-rag:
    image: chromadb/chroma@sha256:7c44cf61eb3f210fa8641c6c943d5621b9626ce863d89247183ffde37717e576
    ports:
      - "8000:8000"
    env_file:
      - ./.env_chroma
    volumes:
      - ./data/my_db:/chroma/my_db
    networks:
      - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

# docker run --gpus=all -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
  ollama-rag:
    build:
      context: .
      dockerfile: ollama.dockerfile
    #volumes:
    #  - ollama:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - rag-network
    #add restart directive at your option for server installs
    #restart: unless-stopped

networks:
  rag-network:
    driver: bridge


